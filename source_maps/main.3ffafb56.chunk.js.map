{"version":3,"sources":["components/ListItem/index.module.css","components/Search/index.module.css","common-components/Loader/index.module.css","common-components/Image/index.module.css","components/Header/index.module.css","components/Stats/index.module.css","pages/Home/index.module.css","common-components/TestRollbar.tsx","store/todo/index.ts","components/Filter/index.tsx","common-components/Loader/AvatarLoader.tsx","store/header/index.ts","common-components/Image/index.tsx","components/Header/index.tsx","helpers/utils.ts","components/ListItem/index.tsx","components/List/index.tsx","components/Search/index.tsx","components/Stats/index.tsx","helpers/useRollbarConfig.ts","pages/Home/index.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","TestRollbar","style","textAlign","onClick","Error","Promise","reject","filterState","atom","key","default","todoListState","filterTodoListState","selector","get","filter","list","item","isDone","todoStatsState","all","length","done","active","donePercentage","Filter","setFilter","useSetRecoilState","onChange","e","target","value","type","name","id","defaultChecked","htmlFor","AvatarLoader","className","styles","avatar","userState","a","fetch","response","json","data","results","picture","email","Image","useRecoilValue","src","thumbnail","alt","img","Header","header","Suspense","fallback","clsx","args","arg","join","ListItem","todo","useRecoilState","todoList","setTodoList","todoIndex","findIndex","row","row__inputs","row__inputs__checkbox","checked","newList","slice","disabled","isEditable","row__inputs__text","text","row__inputs__span","row__inputs__strike","row__btn","map","currentTarget","textContent","editItem","List","todos","Search","useState","todoInput","setTodoInput","setTodoListState","onSubmit","preventDefault","trim","prev","Date","getTime","form","data-testid","form__input","form__button","Stats","container","toFixed","useRollbarConfig","setRollbar","useEffect","rollbar","Rollbar","enabled","accessToken","process","addErrorContext","captureUncaught","captureUnhandledRejections","payload","person","environment","client","javascript","source_map_enabled","code_version","guess_uncaught_frames","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,IAAM,sBAAsB,YAAc,8BAA8B,sBAAwB,wCAAwC,kBAAoB,oCAAoC,oBAAsB,sCAAsC,kBAAoB,oCAAoC,SAAW,6B,uBCAjVD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,YAAc,4BAA4B,aAAe,+B,iBCAvGD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,IAAM,qB,gBCAxBD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,UAAY,2B,iBCA9BD,EAAOC,QAAU,CAAC,UAAY,0B,uHCgBfC,EAjBK,WASlB,OACE,sBAAKC,MAAO,CAAEC,UAAW,UAAzB,UACE,wBAAQC,QAVO,WACjB,MAAM,IAAIC,MAAM,yBASd,0BACA,wBAAQD,QAPS,WACnBE,QAAQC,OAAO,2BAMb,mCCHOC,EAAcC,YAAK,CAC5BC,IAAK,cACLC,QAAS,QAGAC,EAAgBH,YAAK,CAC9BC,IAAK,gBACLC,QAAS,KAGAE,EAAsBC,YAAS,CACxCJ,IAAK,sBACLK,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACEC,EAASD,EAAIP,GACbS,EAAeF,EAAIH,GACzB,OAAQI,GACJ,IAAK,OACD,OAAOC,EAAKD,QAAO,SAAAE,GAAI,OAAIA,EAAKC,UACpC,IAAK,SACD,OAAOF,EAAKD,QAAO,SAAAE,GAAI,OAAKA,EAAKC,UACrC,QACI,OAAOF,MAKVG,EAAiBN,YAAS,CACnCJ,IAAK,iBACLK,IAAK,YAAc,IACTE,GAAOF,EADC,EAAVA,KACaH,GACXS,EAAMJ,EAAKK,OACXC,EAAON,EAAKD,QAAO,SAAAE,GAAI,OAAIA,EAAKC,UAAQG,OAG9C,MAAO,CAAED,MAAKG,OAFCH,EAAME,EAECE,eADS,IAARJ,EAAY,EAAW,IAAPE,EAAaF,MCnB7CK,EAnBA,WACX,IAAMC,EAAYC,YAAkBpB,GAKpC,OACI,sBAAKqB,SALY,SAACC,GAClB,IAAMC,EAASD,EAAEC,OACjBJ,EAAUI,EAAOC,QAGjB,UACI,yCACA,uBAAOC,KAAK,QAAQC,KAAK,SAASF,MAAM,MAAMG,GAAG,MAAMC,gBAAc,IACrE,uBAAOC,QAAQ,MAAf,iBACA,uBAAOJ,KAAK,QAAQC,KAAK,SAASF,MAAM,OAAOG,GAAG,SAClD,uBAAOE,QAAQ,OAAf,kBACA,uBAAOJ,KAAK,QAAQC,KAAK,SAASF,MAAM,SAASG,GAAG,WACpD,uBAAOE,QAAQ,SAAf,wB,iBCRGC,EARM,WACjB,OACI,iCACI,qBAAKC,UAAWC,IAAOC,Y,wBCMtBC,EAAY5B,YAAe,CACpCJ,IAAK,YACLK,IAAI,WAAD,4BAAE,oCAAA4B,EAAA,sEACsBC,MAAM,gDAD5B,cACKC,EADL,gBAEkBA,EAASC,OAF3B,cAEKC,EAFL,SAG0BA,EAAKC,QAAQ,GAAhCC,EAHP,EAGOA,QAASC,EAHhB,EAGgBA,MAHhB,kBAIM,CAAED,UAASC,UAJjB,2CAAF,kDAAC,K,iBCAOC,EATD,WAAO,IACTF,EAAYG,YAAeV,GAA3BO,QACR,OACI,iCACI,qBAAKI,IAAKJ,EAAQK,UAAWC,IAAI,SAAShB,UAAWC,IAAOgB,S,iBCSzDC,EAZA,WAEX,OACI,yBAAQlB,UAAWC,IAAOkB,OAA1B,UACI,6CACA,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SACI,cAAC,EAAD,U,qBCXHC,EAAO,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAoBA,EAAK9C,QAAO,SAAA+C,GAAG,QAAMA,KAAKC,KAAK,M,gBC+DxDC,EAzDE,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAA2B,EACXC,YAAevD,GADJ,mBACpCwD,EADoC,KAC1BC,EAD0B,KAErCC,EAAYF,EAASG,WAAU,SAAArD,GAAI,OAAIA,IAASgD,KAgCtD,OACI,sBAAK3B,UAAWC,IAAOgC,IAAvB,UACI,sBAAKjC,UAAWC,IAAOiC,YAAvB,UACI,uBACIxC,KAAK,WACLM,UAAWC,IAAOkC,sBAClBC,QAAST,EAAK/C,OACdU,SAfE,WACd,IAAM+C,EAAe,sBACdR,EAASS,MAAM,EAAGP,IADJ,4BAEZF,EAASE,IAFG,IAESnD,QAASiD,EAASE,GAAWnD,UAFtC,YAGdiD,EAASS,MAAMP,EAAY,KAElCD,EAAYO,IAUAE,SAAUZ,EAAKa,aAElBb,EAAKa,WACA,uBAAO9C,KAAK,OAAOM,UAAWC,IAAOwC,kBAAmBhD,MAAOkC,EAAKe,KAAMpD,SA5BvE,SAACC,GAClB,IAAMC,EAASD,EAAEC,OACX6C,EAAe,sBACdR,EAASS,MAAM,EAAGP,IADJ,4BAEZF,EAASE,IAFG,IAESW,KAAMlD,EAAOC,SAFtB,YAGdoC,EAASS,MAAMP,EAAY,KAElCD,EAAYO,MAsBE,sBAAMrC,UAAWsB,EAAKrB,IAAO0C,kBAAmBhB,EAAK/C,QAAUqB,IAAO2C,qBAAtE,SAA6FjB,EAAKe,UAG5G,sBAAK1C,UAAWC,IAAO4C,SAAvB,UACI,wBAAQhF,QAAS,SAAC0B,GAAD,OAxCZ,SAACA,EAAwCK,GACtD,IAAMyC,EAAUR,EAASiB,KAAI,SAAAnE,GACzB,OAAIA,EAAKiB,KAAOA,EAAW,2BAAKjB,GAAZ,IAAkB6D,WAA4C,SAAhCjD,EAAEwD,cAAcC,cAC3D,2BAAKrE,GAAZ,IAAkB6D,YAAY,OAElCV,EAAYO,GAmCoBY,CAAS1D,EAAGoC,EAAK/B,KAAzC,SAA+C+B,EAAKa,WAAa,OAAS,SAC1E,wBAAQ3E,QAhDD,WACf,IAAMwE,EAAO,sBACNR,EAASS,MAAM,EAAGP,IADZ,YAENF,EAASS,MAAMP,EAAY,KAElCD,EAAYO,IA2CJ,2BC1CDa,EAVF,WACT,IAAMC,EAAQtC,YAAevC,GAC7B,OACI,sCACO6E,EAAMpE,QAAU,uBAClBoE,EAAML,KAAI,SAAAnB,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAK/B,W,iBC2BpCwD,EAhCA,WAAO,IAAD,EACiBC,mBAAS,IAD1B,mBACVC,EADU,KACCC,EADD,KAEXC,EAAmBnE,YAAkBhB,GAgB3C,OACI,uBAAMoF,SAhBW,SAAClE,GAClBA,EAAEmE,iBACEJ,EAAUK,SACVH,GAAiB,SAACI,GAAD,4BACVA,GADU,CAEb,CACIhE,IAAI,IAAIiE,MAAOC,UACfpB,KAAMY,EACN1E,QAAQ,EACR4D,YAAY,QAGpBe,EAAa,MAIavD,UAAWC,IAAO8D,KAAMC,cAAY,YAAlE,UACI,uBACItE,KAAK,OACLsE,cAAY,aACZhE,UAAWC,IAAOgE,YAClBxE,MAAO6D,EACPhE,SAAU,SAACC,GAAD,OAAOgE,EAAahE,EAAEC,OAAOC,UAE3C,wBAAQO,UAAWC,IAAOiE,aAA1B,qB,iBChBGC,EAZD,WAAO,IAAD,EACwBtD,YAAehC,GAA/CC,EADQ,EACRA,IAAKG,EADG,EACHA,OAAQC,EADL,EACKA,eAErB,OACI,0BAASc,UAAWC,IAAOmE,UAA3B,YACOtF,GAAO,2CAAcA,OACrBG,GAAUA,IAAWH,GAAO,iCAAOG,EAAP,mBAC5BC,GAAkB,iCAAOA,EAAiB,IAAM,EAAIA,EAAiBA,EAAemF,QAAQ,GAA1E,qB,iBCsBlBC,EA3BU,WAAO,IAAD,EACJjB,qBAAdkB,EADkB,oBAEnB5D,EAAUE,YAAeV,GAAzBQ,MAER6D,qBAAU,WACN,IAAMC,EAAU,IAAIC,IAAQ,CACxBC,SAAS,EACTC,YAAaC,mCACbC,iBAAiB,EACjBC,iBAAiB,EACjBC,4BAA4B,EAC5BC,QAAS,CACLC,OAAQ,CAAEtF,GAAIe,EAAOA,SACrBwE,YAAaN,aACbO,OAAQ,CACJC,WAAY,CACRC,oBAAoB,EACpBC,aAAc,IACdC,uBAAuB,OAKvCjB,EAAWE,KACZ,CAAC9D,K,iBCJO8E,EAjBF,WAGX,OAFAnB,IAGE,iCACE,cAAC,EAAD,IACA,0BAAStE,UAAWC,IAAOmE,UAA3B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,QCPSsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CAAUhF,SAAU,6CAApB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINiF,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ffafb56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ListItem_row__3mYxi\",\"row__inputs\":\"ListItem_row__inputs__2VhaN\",\"row__inputs__checkbox\":\"ListItem_row__inputs__checkbox__362bj\",\"row__inputs__span\":\"ListItem_row__inputs__span__2mjff\",\"row__inputs__strike\":\"ListItem_row__inputs__strike__1itxo\",\"row__inputs__text\":\"ListItem_row__inputs__text__3prPK\",\"row__btn\":\"ListItem_row__btn__3BPpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Search_form__3kjaH\",\"form__input\":\"Search_form__input__1eV6O\",\"form__button\":\"Search_form__button__1c1y_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Loader_avatar__1FR9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Image_img__3sjf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2u8_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Stats_container__20erc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3so_C\"};","const TestRollbar = () => {\r\n  const throwError = () => {\r\n    throw new Error(\"Random error occured\");\r\n  };\r\n\r\n  const throwPromise = () => {\r\n    Promise.reject(\"Rejected Promise XXXXX\")\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <button onClick={throwError}>Random Error</button>\r\n      <button onClick={throwPromise}>Promise Rejection</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestRollbar;\r\n","import { atom, selector } from \"recoil\";\r\n\r\nexport interface Todo {\r\n    id: number;\r\n    text: string;\r\n    isDone: boolean;\r\n    isEditable: boolean;\r\n}\r\n\r\nexport const filterState = atom({\r\n    key: \"filterState\",\r\n    default: \"All\"\r\n});\r\n\r\nexport const todoListState = atom({\r\n    key: \"todoListState\",\r\n    default: [] as Todo[]\r\n});\r\n\r\nexport const filterTodoListState = selector({\r\n    key: \"filterTodoListState\",\r\n    get: ({ get }) => {\r\n        const filter = get(filterState);\r\n        const list: Todo[] = get(todoListState);\r\n        switch (filter) {\r\n            case \"Done\":\r\n                return list.filter(item => item.isDone);\r\n            case \"Active\":\r\n                return list.filter(item => !item.isDone);\r\n            default:\r\n                return list;\r\n        }\r\n    }\r\n});\r\n\r\nexport const todoStatsState = selector({\r\n    key: \"todoStatsState\",\r\n    get: ({ get }) => {\r\n        const list = get(todoListState);\r\n        const all = list.length;\r\n        const done = list.filter(item => item.isDone).length;\r\n        const active = all - done;\r\n        const donePercentage = all === 0 ? 0 : done * 100 / all;\r\n        return { all, active, donePercentage };\r\n    }\r\n})","import React from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { filterState, } from \"store/todo\";\r\n\r\nconst Filter = () => {\r\n    const setFilter = useSetRecoilState(filterState);\r\n    const handleChange = (e: React.MouseEvent<HTMLInputElement>) => {\r\n        const target = e.target as HTMLInputElement;\r\n        setFilter(target.value);\r\n    }\r\n    return (\r\n        <div onChange={handleChange}>\r\n            <span>Show </span>\r\n            <input type=\"radio\" name=\"filter\" value=\"All\" id=\"all\" defaultChecked />\r\n            <label htmlFor=\"all\">All</label>\r\n            <input type=\"radio\" name=\"filter\" value=\"Done\" id=\"done\" />\r\n            <label htmlFor=\"done\">Done</label>\r\n            <input type=\"radio\" name=\"filter\" value=\"Active\" id=\"active\" />\r\n            <label htmlFor=\"active\">Active</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n","import styles from './index.module.css';\r\n\r\nconst AvatarLoader = () => {\r\n    return (\r\n        <figure>\r\n            <div className={styles.avatar} />\r\n        </figure>\r\n    )\r\n}\r\n\r\nexport default AvatarLoader\r\n","import { selector } from \"recoil\";\r\n\r\ninterface User {\r\n    email: string;\r\n    picture: {\r\n        thumbnail: string;\r\n        large: string;\r\n        medium: string;\r\n    }\r\n}\r\n\r\nexport const userState = selector<User>({\r\n    key: \"UserState\",\r\n    get: async () => {\r\n        const response = await fetch(\"https://randomuser.me/api/?inc=picture,email\");\r\n        const data = await response.json();\r\n        const { picture, email } = data.results[0];\r\n        return { picture, email }\r\n    }\r\n})","import { useRecoilValue } from \"recoil\";\r\nimport { userState } from \"store/header\";\r\nimport styles from './index.module.css';\r\n\r\nconst Image = () => {\r\n    const { picture } = useRecoilValue(userState);\r\n    return (\r\n        <figure>\r\n            <img src={picture.thumbnail} alt=\"Avatar\" className={styles.img} />\r\n        </figure>\r\n    )\r\n}\r\n\r\nexport default Image;\r\n","import { AvatarLoader } from 'common-components/Loader';\r\nimport Image from 'common-components/Image';\r\nimport React from 'react';\r\nimport styles from './index.module.css';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header className={styles.header}>\r\n            <h1>Recoil-todo</h1>\r\n            <React.Suspense fallback={<AvatarLoader />}>\r\n                <Image />\r\n            </React.Suspense>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export const clsx = (...args: any[]) => args.filter(arg => !!arg).join(\" \");","import { clsx } from \"helpers/utils\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Todo, todoListState } from \"store/todo\";\r\nimport styles from './index.module.css';\r\n\r\nconst ListItem = ({ todo }: { todo: Todo }) => {\r\n    const [todoList, setTodoList] = useRecoilState(todoListState);\r\n    const todoIndex = todoList.findIndex(item => item === todo);\r\n    const deleteItem = () => {\r\n        const newList = [\r\n            ...todoList.slice(0, todoIndex),\r\n            ...todoList.slice(todoIndex + 1)\r\n        ];\r\n        setTodoList(newList);\r\n    }\r\n    const editItem = (e: React.MouseEvent<HTMLButtonElement>, id: number) => {\r\n        const newList = todoList.map(item => {\r\n            if (item.id === id) return { ...item, isEditable: e.currentTarget.textContent === 'Edit' }\r\n            return { ...item, isEditable: false };\r\n        })\r\n        setTodoList(newList);\r\n    }\r\n    const editItemText = (e: React.FormEvent<HTMLInputElement>) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const newList: Todo[] = [\r\n            ...todoList.slice(0, todoIndex),\r\n            { ...todoList[todoIndex], text: target.value },\r\n            ...todoList.slice(todoIndex + 1)\r\n        ];\r\n        setTodoList(newList);\r\n    }\r\n    const checkItem = () => {\r\n        const newList: Todo[] = [\r\n            ...todoList.slice(0, todoIndex),\r\n            { ...todoList[todoIndex], isDone: !todoList[todoIndex].isDone },\r\n            ...todoList.slice(todoIndex + 1)\r\n        ];\r\n        setTodoList(newList);\r\n    }\r\n    return (\r\n        <div className={styles.row}>\r\n            <div className={styles.row__inputs}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className={styles.row__inputs__checkbox}\r\n                    checked={todo.isDone}\r\n                    onChange={checkItem}\r\n                    disabled={todo.isEditable}\r\n                />\r\n                {todo.isEditable\r\n                    ? <input type=\"text\" className={styles.row__inputs__text} value={todo.text} onChange={editItemText} />\r\n                    : <span className={clsx(styles.row__inputs__span, todo.isDone && styles.row__inputs__strike)}>{todo.text}</span>\r\n                }\r\n            </div>\r\n            <div className={styles.row__btn}>\r\n                <button onClick={(e) => editItem(e, todo.id)}>{todo.isEditable ? 'Save' : 'Edit'}</button>\r\n                <button onClick={deleteItem}>Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem;\r\n","import ListItem from \"components/ListItem\";\r\nimport { useRecoilValue } from \"recoil\"\r\nimport { filterTodoListState } from \"store/todo\";\r\n\r\n\r\nconst List = () => {\r\n    const todos = useRecoilValue(filterTodoListState);\r\n    return (\r\n        <section>\r\n            {!!todos.length && <hr />}\r\n            {todos.map(todo => <ListItem key={todo.id} todo={todo} />)}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React, { useState } from \"react\"\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { Todo, todoListState } from \"store/todo\";\r\nimport styles from './index.module.css';\r\n\r\nconst Search = () => {\r\n    const [todoInput, setTodoInput] = useState(\"\");\r\n    const setTodoListState = useSetRecoilState(todoListState);\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (todoInput.trim()) {\r\n            setTodoListState((prev: Todo[]) => [\r\n                ...prev,\r\n                {\r\n                    id: new Date().getTime(),\r\n                    text: todoInput,\r\n                    isDone: false,\r\n                    isEditable: false\r\n                }\r\n            ]);\r\n            setTodoInput(\"\");\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.form} data-testid=\"todo-form\">\r\n            <input\r\n                type=\"text\"\r\n                data-testid=\"todo-input\"\r\n                className={styles.form__input}\r\n                value={todoInput}\r\n                onChange={(e) => setTodoInput(e.target.value)}\r\n            />\r\n            <button className={styles.form__button}>Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import { useRecoilValue } from \"recoil\";\r\nimport { todoStatsState } from \"store/todo\";\r\nimport styles from './index.module.css';\r\n\r\nconst Stats = () => {\r\n    const { all, active, donePercentage } = useRecoilValue(todoStatsState);\r\n\r\n    return (\r\n        <section className={styles.container}>\r\n            {!!all && <span>Total: {all}</span>}\r\n            {!!active && active !== all && <span>{active} more to go</span>}\r\n            {!!donePercentage && <span>{donePercentage % 1 === 0 ? donePercentage : donePercentage.toFixed(2)}% completed</span>}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Stats\r\n","\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport Rollbar from \"rollbar\";\r\nimport { userState } from \"store/header\";\r\n\r\nconst useRollbarConfig = () => {\r\n    const [, setRollbar] = useState<Rollbar>();\r\n    const { email } = useRecoilValue(userState);\r\n\r\n    useEffect(() => {\r\n        const rollbar = new Rollbar({\r\n            enabled: true,\r\n            accessToken: process.env.REACT_APP_ROLLBAR_ACCESS_TOKEN,\r\n            addErrorContext: true,\r\n            captureUncaught: true,\r\n            captureUnhandledRejections: true,\r\n            payload: {\r\n                person: { id: email, email },\r\n                environment: process.env.NODE_ENV,\r\n                client: {\r\n                    javascript: {\r\n                        source_map_enabled: true,\r\n                        code_version: \"2\",\r\n                        guess_uncaught_frames: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        setRollbar(rollbar);\r\n    }, [email])\r\n}\r\n\r\nexport default useRollbarConfig;","import TestRollbar from \"common-components/TestRollbar\";\r\nimport Filter from \"components/Filter\";\r\nimport Header from \"components/Header\";\r\nimport List from \"components/List\";\r\nimport Search from \"components/Search\";\r\nimport Stats from \"components/Stats\";\r\nimport useRollbarConfig from \"helpers/useRollbarConfig\";\r\nimport styles from \"./index.module.css\";\r\n\r\nconst Home = () => {\r\n  useRollbarConfig();\r\n\r\n  return (\r\n    <main>\r\n      <Header />\r\n      <section className={styles.container}>\r\n        <Stats />\r\n        <Search />\r\n        <Filter />\r\n        <List />\r\n      </section>\r\n      <TestRollbar />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RecoilRoot } from 'recoil';\r\nimport './index.css';\r\nimport Home from './pages/Home';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <RecoilRoot>\r\n        <Home />\r\n      </RecoilRoot>\r\n    </Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}